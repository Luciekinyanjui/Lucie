{"ast":null,"code":"var _jsxFileName = \"/home/lucy/Documents/react-writers-blog/src/Components/Writers/Writer/index.js\";\nimport React, { Fragment } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport { NotFound } from '../../Errors';\nimport Text from './Text';\nexport default (function (_ref) {\n  var url = _ref.match.url,\n      name = _ref.name,\n      born = _ref.born,\n      deceased = _ref.deceased,\n      description = _ref.description,\n      image = _ref.image,\n      texts = _ref.texts;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: image,\n    alt: name,\n    style: {\n      maxWidth: 300\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, name), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, born, \" \\u2014 \", deceased), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, description), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, texts.map(function (_ref2) {\n    var id = _ref2.id,\n        title = _ref2.title;\n    return React.createElement(\"li\", {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"\".concat(url, \"/texts/\").concat(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, title));\n  })), React.createElement(Route, {\n    path: \"\".concat(url, \"/texts/:textId\"),\n    render: function render(props) {\n      var text = texts.find(function (_ref3) {\n        var id = _ref3.id;\n        return id === props.match.params.textId;\n      });\n\n      if (!text) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Text, Object.assign({}, text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/home/lucy/Documents/react-writers-blog/src/Components/Writers/Writer/index.js"],"names":["React","Fragment","Link","Route","NotFound","Text","url","match","name","born","deceased","description","image","texts","maxWidth","map","id","title","props","text","find","params","textId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,gBAAe;AAAA,MAAYC,GAAZ,QAAGC,KAAH,CAAYD,GAAZ;AAAA,MAAkBE,IAAlB,QAAkBA,IAAlB;AAAA,MAAwBC,IAAxB,QAAwBA,IAAxB;AAAA,MAA8BC,QAA9B,QAA8BA,QAA9B;AAAA,MAAwCC,WAAxC,QAAwCA,WAAxC;AAAA,MAAqDC,KAArD,QAAqDA,KAArD;AAAA,MAA4DC,KAA5D,QAA4DA,KAA5D;AAAA,SACb,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAED,KAAV;AAAiB,IAAA,GAAG,EAAEJ,IAAtB;AAA4B,IAAA,KAAK,EAAE;AAACM,MAAAA,QAAQ,EAAE;AAAX,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,IAAL,CAHF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IADH,cACkBC,QADlB,CALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,WADH,CATF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,CAACE,GAAN,CAAU;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,KAAP,SAAOA,KAAP;AAAA,WACT;AAAI,MAAA,GAAG,EAAED,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,YAAKV,GAAL,oBAAkBU,EAAlB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,KADH,CADF,CADS;AAAA,GAAV,CADH,CAbF,EAuBE,oBAAC,KAAD;AAAO,IAAA,IAAI,YAAKX,GAAL,mBAAX;AAAqC,IAAA,MAAM,EACzC,gBAAAY,KAAK,EAAI;AACP,UAAMC,IAAI,GAAGN,KAAK,CAACO,IAAN,CAAW;AAAA,YAAGJ,EAAH,SAAGA,EAAH;AAAA,eAAYA,EAAE,KAAKE,KAAK,CAACX,KAAN,CAAYc,MAAZ,CAAmBC,MAAtC;AAAA,OAAX,CAAb;;AAEA,UAAI,CAAEH,IAAN,EAAY;AACV,eAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aAAO,oBAAC,IAAD,oBAAUA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,CADa;AAAA,CAAf","sourcesContent":["import React, { Fragment } from 'react'\nimport { Link, Route } from 'react-router-dom'\nimport { NotFound } from '../../Errors'\nimport Text from './Text'\n\nexport default ({ match: { url}, name, born, deceased, description, image, texts }) =>\n  <Fragment>\n    <img src={image} alt={name} style={{maxWidth: 300}}/>\n\n    <h1>{name}</h1>\n\n    <h3>\n      {born} &mdash; {deceased}\n    </h3>\n    \n    <p>\n      {description}\n    </p>\n\n    <ul>\n      {texts.map(({ id, title }) =>\n        <li key={id}>\n          <Link to={`${url}/texts/${id}`}>\n            {title}\n          </Link>\n        </li>\n      )}\n    </ul>\n\n    <Route path={`${url}/texts/:textId`} render={\n      props => {\n        const text = texts.find(({ id }) => id === props.match.params.textId)\n\n        if (! text) {\n          return <NotFound/>\n        }\n\n        return <Text {...text} />\n      }\n    } />\n  </Fragment>"]},"metadata":{},"sourceType":"module"}